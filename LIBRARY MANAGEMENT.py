# -*- coding: utf-8 -*-
"""Library Management System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TB9EWQK-vR5e-83ny8csXDhvVXBCIEMd

# LIBRARY MANAGEMENT
"""

class Library():        #creating a class for the library management.
    def __init__(self,Title,Author,ISBN):
        self.Books=[]
        self.Title=Title
        self.Author=Author
        self.ISBN=ISBN


    def showBooks(self):   # to show all books in the library.
        print(self.Books)


    def addBook(self):   #add books to the library.
      Title = input("Enter Book Title: ").upper()      #Get book title and convert to uppercase.
      Author = input("Enter Book Author: ").split(",")  #Get book author name and separate author names if user gives more than 1 author.
      Author = [x.strip().upper() for x in Author]      #convert each letter from author name to uppercase.

      if len(Author) < 1:   #Check if the author is more than 1.
        print("Invalid Author Name: At least 1 Author Should Be Present")
        return

      ISBN = input("Enter Book ISBN: ")

      if len(ISBN) != 13:  #Check if the ISBN number is more than 13 digit.
        print("Invalid ISBN: ISBN Should Contain 13 Digit Number")
        return

      self.Books.append([Title, Author, ISBN])  #Add all the details in a single list.
      print("Book Added Successfully")


    def search_Title(self):   #Search by title.
      title = input("Enter Book Title: ").upper()  #convert to uppercase . already the title are converted to uppercase and stored in the library . it makes easy to search either users use lower case or upper case.
      found = False
      for book in self.Books:
        if title in book[0]:  #check if the title is present in the list.
            print("Book Found")
            print(book)
            found = True
            break
      if not found:
        print("Book Not Found")


    def search_Author(self):  #Search by author.
      author = input("Enter Book Author: ").upper()
      found = False
      for book in self.Books:
        if author in book[1]:   #check if the author is present in the list.
            print("Book Found:")
            print(book)
            found = True

      if not found:
        print("No Books Found With This Author")


    def search_ISBN(self):   #Search by ISBN.
        isbn=input("Enter Book ISBN: ")
        found = False
        for book in self.Books:
            if isbn in book[2]:  #check if the ISBN is present in the list.
                print("ISBN Found")
                print(book)
                found = True
                break
        if not found:
            print("No Book With This ISBN")

library=Library("My Library", "Unknown Author", "9781614841002")  #creating a library object. passing sample data to the instance.
while True: #loop untill user quit and reshows the option if the user pass invalid choise.
  print("Show all Books --> 1")
  print("To Add Book --> 2")
  print("To Search Book By Title --> 3")
  print("To Search Book By Author --> 4")
  print("To Search Book By ISBN --> 5")
  print("To Exit --> 6")

  choice=(input("Enter Your Choice: "))

  if choice=="1":  #call library function according to the user choise.
    library.showBooks()
  elif choice=="2":
    library.addBook()
  elif choice=="3":
    library.search_Title()
  elif choice=="4":
    library.search_Author()
  elif choice=="5":
    library.search_ISBN()
  elif choice=="6":
    break  #stops the loop.
  else:
    print("Invalid Choice")
